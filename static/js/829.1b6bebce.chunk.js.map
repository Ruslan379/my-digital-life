{"version":3,"file":"static/js/829.1b6bebce.chunk.js","mappings":";+RAmBe,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAGXC,EAAmB,YAEzBC,EAAAA,EAAAA,YAAU,WACRH,GAASI,EAAAA,EAAAA,OACTJ,GAASK,EAAAA,EAAAA,MACV,GAAE,CAACL,IAGJ,IAAMM,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IAC5BC,QAAQC,IAAI,4BAA6BJ,GAEzC,IAAMK,GAAeJ,EAAAA,EAAAA,IAAYK,EAAAA,IACjCH,QAAQC,IAAI,iCAAkCC,GAE9C,IAAME,GAAYN,EAAAA,EAAAA,IAAYO,EAAAA,GAC9BL,QAAQC,IAAI,8BAA+BG,GAE3C,IAAME,GAAeR,EAAAA,EAAAA,IAAYS,EAAAA,GAIjC,OAHAP,QAAQC,IAAI,iCAAkCK,IAI5C,UAAC,IAAD,YACE,sCAAcT,MACd,SAAC,IAAD,CAAaA,QAASA,KACtB,mBACA,mBAEA,mDACA,SAAC,IAAD,CAAiBJ,iBAAkBA,IAGlCW,IAAa,SAAC,IAAD,IAEbE,EAAaE,OAAS,IACrB,iCACE,wDACA,SAAC,IAAD,CACEF,aAAcA,EACdb,iBAAkBA,SAa7B","sources":["pages/ExpensesPage/ExpensesPage.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Container } from 'components/Container/Container';\n\nimport { Loader } from 'components/Loader/Loader';\n\nimport { getBalance } from 'redux/auth/authOperations';\nimport { selectIsRefreshing, selectBalance } from 'redux/auth/authSelectors';\n// import { useAuth } from 'hooks';\nimport { getAllTransactions } from 'redux/transaction/transactionOperations.js';\nimport { selectLoadingTransactions, selectAllTransactions } from 'redux/transaction/transactionSelectors.js';\n\nimport { BalanceForm } from 'components/BalanceForm/BalanceForm.js';\nimport { TransactionForm } from 'components/TransactionForm/TransactionForm.js';\nimport { TransactionList } from 'components/TransactionList/TransactionList.js';\n\n\n//-----------------------------------------------------------------------------------\nexport default function ExpensesPage() {\n  const dispatch = useDispatch();\n\n  //! Тип тразакции \"expenses\"\n  const transactionsType = \"expenses\"\n\n  useEffect(() => {\n    dispatch(getAllTransactions());\n    dispatch(getBalance());\n  }, [dispatch]);\n\n  //! ========================== console balance & isRefreshing ==========================\n  const balance = useSelector(selectBalance);\n  console.log(\"ExpensesPage ==> balance:\", balance); //!\n\n  const isRefreshing = useSelector(selectIsRefreshing);\n  console.log(\"ExpensesPage ==> isRefreshing:\", isRefreshing); //!\n\n  const isLoading = useSelector(selectLoadingTransactions);\n  console.log(\"ExpensesPage ==> isLoading:\", isLoading); //!\n\n  const transactions = useSelector(selectAllTransactions);\n  console.log(\"ExpensesPage ==> transactions:\", transactions); //!\n  //! _________________________ console balance & isRefreshing _________________________\n\n  return (\n    <Container>\n      <h2>Balance: {balance}</h2>\n      <BalanceForm balance={balance} />\n      <br />\n      <br />\n\n      <h2>Expenses transactions</h2>\n      <TransactionForm transactionsType={transactionsType} />\n\n\n      {isLoading && <Loader />}\n\n      {transactions.length > 0 && (\n        <>\n          <h2>Expenses transactions list</h2>\n          <TransactionList\n            transactions={transactions}\n            transactionsType={transactionsType}\n          // visibleTransaction={visibleTransaction}\n          />\n\n          {/* <Filter /> */}\n\n        </>\n      )}\n\n      {/* {contacts.length > 0 && !isLoading && <DeleteAllContacts />} */}\n\n    </Container>\n  );\n}\n"],"names":["ExpensesPage","dispatch","useDispatch","transactionsType","useEffect","getAllTransactions","getBalance","balance","useSelector","selectBalance","console","log","isRefreshing","selectIsRefreshing","isLoading","selectLoadingTransactions","transactions","selectAllTransactions","length"],"sourceRoot":""}