{"version":3,"file":"static/js/538.1d969889.chunk.js","mappings":"mKACA,EAA4B,6B,UCKfA,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACrB,gBAAKC,UAAWC,EAAhB,SACKF,GAFgB,C,oGCDnBG,GAAOC,EAAAA,EAAAA,IAAH,uGAUGC,GAAU,OAAOC,EAAAA,IAAP,qBAAH,aACLH,EADK,2BAIpBE,EAAQE,aAAe,CACrBC,KAAM,G,8ICnBR,EAAuB,2BAAvB,EAA8D,gCAA9D,EAAwG,8BAAxG,EAAkJ,gC,UCYnI,SAASC,IAEtB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAGvBC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IA2B9B,OACE,UAACjB,EAAA,EAAD,YACE,kBACEE,UAAWC,EACXe,SA5Be,SAAAC,GACnBA,EAAEC,iBAEF,IAAMC,EAAOF,EAAEG,cACTC,EAAOF,EAAKG,SAASD,KAAKE,MAE1BC,EAAQL,EAAKG,SAASE,MAAMD,MAElC,GACEZ,EAASc,MAAK,SAAAC,GAAI,OAAIA,EAAKL,KAAKM,gBAAkBN,EAAKM,aAArC,IAKlB,OAFAC,EAAAA,GAAAA,QAAA,UAAiBP,EAAjB,qHACAF,EAAKU,QAIPpB,GAASqB,EAAAA,EAAAA,IAAW,CAAET,KAAAA,EAAMG,MAAAA,KAC5BL,EAAKU,OAEN,EAMG,WAKE,mBACE7B,UAAWC,EADb,UAIGa,EAAY,iBAAmB,QAChC,mBACA,kBACEd,UAAWC,EACX8B,GAAG,YACHC,KAAK,OACLX,KAAK,OACLY,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAKZ,mBAEA,mBAAOnC,UAAWC,EAAlB,UAEGa,EAAY,MAAQ,SACrB,mBACA,kBACEd,UAAWC,EACX+B,KAAK,MACLX,KAAK,QACLY,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAKZ,mBAEA,mBACEnC,UAAWC,EACX+B,KAAK,SACLI,SAAUtB,EAHZ,SAMGA,GAAY,SAACV,EAAA,EAAD,CAASG,KAAK,KAAd,yBAA2C,oBAI5D,SAAC,KAAD,CAAgB8B,UAAW,KAAMC,MAAO,cAG7C,C,wGCvGM,IAAMvB,EAAgB,SAAAwB,GAAK,OAAIA,EAAM5B,SAASG,SAAnB,EAKrBD,EAAoB,SAAA0B,GAAK,OAAIA,EAAM5B,SAAS6B,KAAnB,EAEzBC,EAAoB,SAAAF,GAAK,OAAIA,EAAM5B,SAAS+B,cAAnB,C","sources":["webpack://my-digital-life/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","components/Spinner/Spinner.js","webpack://my-digital-life/./src/pages/ExpensesPage/ExpensesPage.module.css?388c","pages/ExpensesPage/ExpensesPage.js","redux/contacts/contactsSelectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Container\":\"Container_Container__dPyVg\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport css from 'components/Container/Container.module.css' \n\n\nexport const Container = ({ children }) =>\n    <div className={css.Container}>\n        {children}\n    </div>;\n\n\nContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\n\n","import styled from '@emotion/styled/macro';\nimport { keyframes } from '@emotion/react';\nimport { CgSpinner } from 'react-icons/cg';\n\n\nconst spin = keyframes`\n0% {\n  transform: rotate(0deg);\n}\n\n100% {\n  transform: rotate(1turn);\n}\n`;\n\nexport const Spinner = styled(CgSpinner)`\n  animation: ${spin} 0.85s linear infinite;\n`;\n\nSpinner.defaultProps = {\n  size: 40,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Form\":\"ExpensesPage_Form__0Vpxs\",\"FormLabel\":\"ExpensesPage_FormLabel__2saZ9\",\"FormBtn\":\"ExpensesPage_FormBtn__NTkEx\",\"FormInput\":\"ExpensesPage_FormInput__dJsML\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsOperations';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { Container } from 'components/Container/Container';\nimport { selectAllContacts, selectLoading } from 'redux/contacts/contactsSelectors';\nimport { Spinner } from 'components/Spinner/Spinner';\n\nimport css from './ExpensesPage.module.css';\n\n\nexport default function ExpensesPage() {\n  // export const ExpensesPage = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectAllContacts);\n  // console.log(\"Contacts==>contacts:\", contacts); //!\n\n  const isLoading = useSelector(selectLoading);\n  // console.log(\"ContactListItem==>isLoading:\", isLoading); //!\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n    const name = form.elements.name.value;\n    // const number = form.elements.number.value; //??\n    const phone = form.elements.phone.value;\n\n    if (\n      contacts.find(item => item.name.toLowerCase() === name.toLowerCase())\n    ) {\n      // alert(`${name} уже есть в контактах.`);\n      toast.warning(`${name} уже есть в контактах.`);\n      form.reset();\n      return;\n    }\n\n    dispatch(addContact({ name, phone }));\n    form.reset();\n    return;\n  };\n\n\n\n  return (\n    <Container>\n      <form\n        className={css.Form}\n        onSubmit={handleSubmit}\n      >\n\n        <label\n          className={css.FormLabel}\n        >\n          {/* Name */}\n          {isLoading ? \"Please wait...\" : \"Name\"}\n          <br />\n          <input\n            className={css.FormInput}\n            id=\"inputName\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          // value={nameValue}\n          // onChange={handleChange}\n          />\n        </label>\n        <br />\n\n        <label className={css.FormLabel}>\n          {/* Phone */}\n          {isLoading ? \"...\" : \"Phone\"}\n          <br />\n          <input\n            className={css.FormInput}\n            type=\"tel\"\n            name=\"phone\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          // value={phoneValue}\n          // onChange={handleChange}\n          />\n        </label>\n        <br />\n\n        <button\n          className={css.FormBtn}\n          type=\"submit\"\n          disabled={isLoading}\n        >\n          {/* Add contact */}\n          {isLoading ? <Spinner size=\"32\">Add contact</Spinner> : \"Add contact\"}\n        </button>\n      </form>\n\n      <ToastContainer autoClose={1500} theme={\"colored\"} />\n    </Container>\n  );\n}\n\n\n\n\n\n","// export const selectLoading = state => state.contacts.loading; //! Ошибка Репеты\nexport const selectLoading = state => state.contacts.isLoading;\n\n\n// export const selectFilter = state => state.contacts.filter; //! перенесен в отдельный reducer\n\nexport const selectAllContacts = state => state.contacts.items;\n\nexport const getUploadContacts = state => state.contacts.uploadContacts;"],"names":["Container","children","className","css","spin","keyframes","Spinner","CgSpinner","defaultProps","size","ExpensesPage","dispatch","useDispatch","contacts","useSelector","selectAllContacts","isLoading","selectLoading","onSubmit","e","preventDefault","form","currentTarget","name","elements","value","phone","find","item","toLowerCase","toast","reset","addContact","id","type","pattern","title","required","disabled","autoClose","theme","state","items","getUploadContacts","uploadContacts"],"sourceRoot":""}