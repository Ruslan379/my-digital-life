{"version":3,"file":"static/js/972.f000808c.chunk.js","mappings":"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","sources":["webpack://my-digital-life/./src/components/ContactEditor/ContactEditor.module.css?ead8","components/ContactEditor/ContactEditor.js","webpack://my-digital-life/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","webpack://my-digital-life/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.js","webpack://my-digital-life/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","webpack://my-digital-life/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","webpack://my-digital-life/./src/components/DeleteAllContacts/DeleteAllContacts.module.css?64b5","components/DeleteAllContacts/DeleteAllContacts.js","webpack://my-digital-life/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","components/Loader/Loader.jsx","components/Spinner/Spinner.js","webpack://my-digital-life/./src/components/BalanceForm/BalanceForm.module.css?dae1","components/BalanceForm/BalanceForm.js","pages/ExpensesPage/ExpensesPage.js","redux/contacts/contactsSelectors.js","redux/filter/filterSelectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"FormEdit\":\"ContactEditor_FormEdit__u3Qim\",\"FormLabelEdit\":\"ContactEditor_FormLabelEdit__ul2rA\",\"FormBtnEdit\":\"ContactEditor_FormBtnEdit__nK0vb\",\"FormInputEdit\":\"ContactEditor_FormInputEdit__EXW93\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { editContact } from 'redux/contacts/contactsOperations';\nimport PropTypes from 'prop-types';\n\n\nimport { selectLoading } from 'redux/contacts/contactsSelectors';\nimport { Spinner } from 'components/Spinner/Spinner';\n\nimport css from './ContactEditor.module.css';\n\n\n// export const ContactEditor = ({ id, name, number, toggleModal }) => {\nexport const ContactEditor = ({ id, name, phone, toggleModal }) => {\n    const dispatch = useDispatch();\n\n    const isLoading = useSelector(selectLoading);\n    // console.log(\"ContactListItem==>isLoading:\", isLoading); //!\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        const form = e.currentTarget;\n        // const newName = form.elements.name.value; //! 1-й вариант\n        // const newNumber = form.elements.number.value; //! 1-й вариант\n\n        // dispatch(editContact({ id, newName, newNumber })); //! 1-й вариант\n        dispatch(\n            editContact({\n                id,\n                name: form.elements.name.value,\n                // number: form.elements.number.value, //??\n                phone: form.elements.phone.value,\n            })\n        ); //! 2-й вариант\n        form.reset();\n        toggleModal()\n        return;\n    };\n\n\n\n    return (\n        <>\n            <form\n                className={css.FormEdit}\n                onSubmit={handleSubmit}\n            >\n\n                <label\n                    className={css.FormLabelEdit}\n                >\n                    {/* Name */}\n                    {isLoading ? \"Please wait...\" : \"Name\"}\n                    <br />\n                    <input\n                        className={css.FormInputEdit}\n                        id=\"inputName\"\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                        defaultValue={name}\n                    // onChange={handleChange}\n                    />\n                </label>\n                <br />\n\n                <label className={css.FormLabelEdit}>\n                    {/* Phone */}\n                    {isLoading ? \"...\" : \"Phone\"}\n                    <br />\n                    <input\n                        className={css.FormInputEdit}\n                        type=\"tel\"\n                        name=\"phone\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                        defaultValue={phone}\n                    // onChange={handleChange}\n                    />\n                </label>\n                <br />\n\n                <button\n                    className={css.FormBtnEdit}\n                    type=\"submit\"\n                    disabled={isLoading}\n                >\n                    {/* Edit contact */}\n                    {isLoading ? <Spinner size=\"32\">Add contact</Spinner> : \"Edit contact\"}\n\n                </button>\n            </form>\n        </>\n    );\n}\n\nContactEditor.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n    toggleModal: PropTypes.func.isRequired,\n};\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"Overlay\":\"Modal_Overlay__yoxbg\",\"Modal\":\"Modal_Modal__I1UYJ\"};","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport css from 'components/Modal/Modal.module.css' \n\n\n\n\nconst modalRoot = document.querySelector('#modal-root');\n\n\nexport function Modal({ children, onClose }) {\n\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.code === 'Escape') {\n        onClose();\n      }\n    };\n    \n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]); \n\n\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n\n\n    return createPortal(\n      <div\n        className={css.Overlay}\n        onClick={handleBackdropClick}\n      >\n          <div className={css.Modal}>\n          {children}\n          </div>\n      </div>,\n      modalRoot,\n    );\n  }\n\n\n\nModal.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\n","// extracted by mini-css-extract-plugin\nexport default {\"ContactListItem\":\"ContactListItem_ContactListItem__sSK4a\",\"ContactListText\":\"ContactListItem_ContactListText__A1dah\",\"ContactListNumber\":\"ContactListItem_ContactListNumber__2WeGK\",\"ContactListEditBtn\":\"ContactListItem_ContactListEditBtn__V1H9K\",\"ContactListDeleteBtn\":\"ContactListItem_ContactListDeleteBtn__TE5BB\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// import { fetchContacts } from 'redux/contacts/contactsOperations'; //??\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport { selectLoading } from 'redux/contacts/contactsSelectors';\nimport { ContactEditor } from 'components/ContactEditor/ContactEditor';\n// import { Spinner } from 'components/Spinner/Spinner';\nimport { Modal } from 'components/Modal/Modal';\n\nimport css from './ContactListItem.module.css';\n\n\n\n// export const ContactListItem = ({ id, name, number }) => { //??\nexport const ContactListItem = ({ id, name, phone }) => {\n    const [showModal, setShowModal] = useState(false);\n\n    const dispatch = useDispatch();\n\n    const isLoading = useSelector(selectLoading);\n    // console.log(\"ContactListItem==>isLoading:\", isLoading); //!\n\n\n    // const handleDelete = () => dispatch(deleteContact(id)); //??\n\n    const handleDelete = () => {\n        dispatch(deleteContact(id));\n        // dispatch(fetchContacts()); //??\n    };\n\n\n    const toggleModal = () => {\n        setShowModal(!showModal);\n    };\n\n    const handleEdit = () => {\n        toggleModal()\n        //! +++++++++++++++++++++++++++++++++++\n        // const newName = \"RoseEDIT\"\n        // const newNumber = \"000-00-00\"\n        // console.log(\"id:\", id);\n        // console.log(\"newName:\", newName);\n        // console.log(\"newNumber:\", newNumber);\n\n        // ContactForm(newName, newNumber)\n\n        // dispatch(editContact({ id, newName, newNumber }))\n        //! +++++++++++++++++++++++++++++++++++\n    };\n\n\n\n\n    return (\n        <>\n            <li className={css.ContactListItem}>\n                <p className={css.ContactListText}>{name}:\n                    <span className={css.ContactListNumber}\n                    > {phone}\n                    </span>\n                </p>\n                <button\n                    type=\"button\"\n                    className={css.ContactListEditBtn}\n                    onClick={handleEdit}\n                    disabled={isLoading}\n                >\n                    Edit\n                    {/* {isLoading ? [<Spinner size=\"18\" />, \" Editing...\"] : \"Edit\"} */}\n                </button>\n                <button\n                    type=\"button\"\n                    className={css.ContactListDeleteBtn}\n                    onClick={handleDelete}\n                    // onClick={() => deleteContact(id)}\n                    disabled={isLoading}\n                >\n                    Delete\n                    {/* {isLoading ? [<Spinner size=\"18\" />, \" Deleting...\"] : \"Delete\"} */}\n                </button>\n\n                {showModal && (\n                    <Modal onClose={toggleModal}>\n                        <ContactEditor\n                            id={id}\n                            name={name}\n                            // number={number}\n                            phone={phone}\n                            toggleModal={toggleModal}\n\n                        />\n                    </Modal>\n                )}\n            </li>\n        </>\n    );\n};\n\nContactListItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"ContactList\":\"ContactList_ContactList__2mXfy\"};","// import { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { ContactListItem } from '../ContactListItem/ContactListItem';\n\n\nimport css from './ContactList.module.css';\n\n\n\nexport const ContactList = ({ visibleContacts }) => {\n    return (\n        <ul className={css.ContactList}>\n            {/* {visibleContacts.map(({ id, name, number }) => ( */}\n            {visibleContacts.map(({ _id, name, phone }) => (\n                <ContactListItem\n                    key={_id}\n                    id={_id}\n                    name={name}\n                    // number={number} //??\n                    phone={phone}\n                />\n            ))}\n        </ul>\n    );\n};\n\n\nContactList.propTypes = {\n    visibleContacts: PropTypes.array.isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"Container\":\"Container_Container__dPyVg\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport css from 'components/Container/Container.module.css' \n\n\nexport const Container = ({ children }) =>\n    <div className={css.Container}>\n        {children}\n    </div>;\n\n\nContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"DeleteAllContactsBtn\":\"DeleteAllContacts_DeleteAllContactsBtn__4R-sx\"};","import { useDispatch, useSelector } from 'react-redux';\n// import { useNavigate } from \"react-router-dom\";\n\nimport { deleteContact } from 'redux/contacts/contactsOperations';\n// import { fetchContacts } from 'redux/contacts/contactsOperations'; //??\nimport { selectLoading, selectAllContacts } from 'redux/contacts/contactsSelectors';\n\nimport { Container } from 'components/Container/Container';\n// import { Spinner } from 'components/Spinner/Spinner';\n\nimport css from './DeleteAllContacts.module.css';\n\n\nexport function DeleteAllContacts() {\n  const dispatch = useDispatch();\n  // const navigate = useNavigate();\n\n  const isLoading = useSelector(selectLoading);\n  // console.log(\"DeleteAllContacts==>isLoading:\", isLoading); //!\n\n\n  // console.log(\"DeleteAllContacts==>isDeleting:\", isDeleting); //!\n\n\n  const contacts = useSelector(selectAllContacts);\n  // console.log(\"Contacts==>contacts:\", contacts); //!\n\n\n\n\n\n  const handlDeleteAllContacts = () => {\n    for (const contact of contacts) {\n      // const id = contact.id;\n      const id = contact._id;\n      dispatch(deleteContact(id));\n      // dispatch(fetchContacts()); //??\n    };\n    // navigate(\"/contacts\", { replace: true });\n  };\n\n\n\n\n  return (\n    <Container>\n      <button\n        type=\"button\"\n        className={css.DeleteAllContactsBtn}\n        onClick={handlDeleteAllContacts}\n        disabled={isLoading}\n      >\n        Delete all Contacts\n        {/* {isLoading ? [<Spinner size=\"18\" />, \" Deleting all Contacts...\"] : \"Delete all Contacts\"} */}\n      </button>\n    </Container>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"FilterLabel\":\"Filter_FilterLabel__OSs84\",\"FilterInput\":\"Filter_FilterInput__-+rOd\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getFilter } from 'redux/filter/filterSelectors';\nimport { changesFilter } from 'redux/filter/filterSlice';\n\nimport css from 'components/Filter/Filter.module.css' \n\n\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(getFilter);\n  // console.log(\"Filter==>filter:\", filter); //!\n\n//! запись значения из input-(Find contacts by name) в filter\n    const changeFilter = (event) => {\n        const filterValue = event.currentTarget.value;\n        dispatch(changesFilter({ filterValue }));\n    };\n\n\n  return (\n    <label className={css.FilterLabel}>\n      Find contacts by name\n      <input\n        className={css.FilterInput}\n        type=\"text\"\n        // value={value}\n        value={filter}\n        // onChange={onChange}\n        onChange={changeFilter}\n      />\n    </label>\n)};\n\n\n","import React from 'react';\n\nimport { Audio } from  'react-loader-spinner'\n\n\n\nexport const Loader = () => (\n  <h1 style={{ margin: '0 auto' }}>\n    Please wait...\n      <Audio width = \"100%\" />\n  </h1>\n);\n\n\n\n// export default Loader;\n","import styled from '@emotion/styled/macro';\nimport { keyframes } from '@emotion/react';\nimport { CgSpinner } from 'react-icons/cg';\n\n\nconst spin = keyframes`\n0% {\n  transform: rotate(0deg);\n}\n\n100% {\n  transform: rotate(1turn);\n}\n`;\n\nexport const Spinner = styled(CgSpinner)`\n  animation: ${spin} 0.85s linear infinite;\n`;\n\nSpinner.defaultProps = {\n  size: 40,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Form\":\"BalanceForm_Form__sTjkN\",\"FormLabel\":\"BalanceForm_FormLabel__D+IkA\",\"FormBtn\":\"BalanceForm_FormBtn__7m8A3\",\"FormInput\":\"BalanceForm_FormInput__bqPQk\"};","// import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\n\n// import { getBalance, changeBalance } from 'redux/auth/authOperations.js';\nimport { changeBalance } from 'redux/auth/authOperations.js';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// import { selectIsRefreshing, selectBalance } from 'redux/auth/authSelectors';\nimport { selectIsRefreshing } from 'redux/auth/authSelectors';\nimport { useAuth } from 'hooks';\n// import { Spinner } from 'components/Spinner/Spinner';\n\nimport css from './BalanceForm.module.css';\n\n\n\nexport const BalanceForm = () => {\n    const dispatch = useDispatch();\n\n    // useEffect(() => {\n    //     dispatch(getBalance());\n    // }, [dispatch]);\n\n    // const balance = useSelector(selectBalance);\n    const { user } = useAuth();\n    const { balance } = user;\n    console.log(\"BalanceForm ==> balance:\", balance); //!\n\n    const isRefreshing = useSelector(selectIsRefreshing);\n    console.log(\"BalanceForm ==> isRefreshing:\", isRefreshing); //!\n\n\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        const form = e.currentTarget;\n        const balance = form.elements.balance.value;\n\n        dispatch(changeBalance({ balance }));\n        toast.success(`Your balance of ${balance} UAN has been successfully added`);\n        form.reset();\n        return;\n    };\n\n\n\n    return (\n        <>\n            <form\n                className={css.Form}\n                onSubmit={handleSubmit}\n            >\n\n                <label\n                    className={css.FormLabel}\n                >\n                    Balance:&nbsp;&nbsp;\n                    {/* {isRefreshing ? \"Please wait...\" : \"Balance\"} */}\n                    <br />\n                    <input\n                        className={css.FormInput}\n                        id=\"inputName\"\n                        type=\"text\"\n                        name=\"balance\"\n                        pattern=\"^(([0-9]*)|(([0-9]*)\\.([0-9]*)))$\"\n                        title=\"Вalance must be whole numbers (or decimal numbers)\"\n                        required\n                        // value={balance}\n                        defaultValue={balance}\n                    // onChange={handleChange}\n                    />\n                </label>\n                <br />\n\n\n                <button\n                    className={css.FormBtn}\n                    type=\"submit\"\n                // disabled={isRefreshing}\n                >\n                    CONFIRM\n                    {/* {isRefreshing ? <Spinner size=\"32\">CONFIRM</Spinner> : \"CONFIRM\"} */}\n                </button>\n            </form>\n\n            <ToastContainer autoClose={1500} theme={\"colored\"} />\n        </>\n    );\n}\n\n\n\n\n\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport { selectLoading } from 'redux/contacts/contactsSelectors';\n\nimport { getFilter } from 'redux/filter/filterSelectors';\n\nimport { getBalance } from 'redux/auth/authOperations';\n// import { selectIsRefreshing, selectBalance } from 'redux/auth/authSelectors';\nimport { useAuth } from 'hooks';\nimport { selectAllContacts } from 'redux/contacts/contactsSelectors';\n\nimport { Container } from 'components/Container/Container';\nimport { BalanceForm } from 'components/BalanceForm/BalanceForm.js';\nimport { Loader } from 'components/Loader/Loader';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { DeleteAllContacts } from 'components/DeleteAllContacts/DeleteAllContacts';\n\n\n\nexport default function ExpensesPage() {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(selectLoading);\n  // console.log(\"ExpensesPage ==> isLoading:\", isLoading); //!\n\n  const filter = useSelector(getFilter);\n  // console.log(\"ExpensesPage ==> filter:\", filter); //!\n\n  const contacts = useSelector(selectAllContacts);\n  console.log(\"ExpensesPage ==> contacts:\", contacts); //!\n\n\n  const { isRefreshing, user } = useAuth();\n  const { balance } = user;\n  console.log(\"BalanceForm ==> balance:\", balance); //!\n  // const balance = useSelector(selectBalance);\n  console.log(\"ExpensesPage ==> balance:\", balance); //!\n\n  // const isRefreshing = useSelector(selectIsRefreshing);\n  console.log(\"ExpensesPage ==> isRefreshing:\", isRefreshing); //!\n\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n    dispatch(getBalance());\n  }, [dispatch]);\n\n\n\n  //! Создание нового массива объектов из contacts с учетом значения поиска из filter\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      (contact.name.toLowerCase()).includes(normalizedFilter),\n    );\n  };\n\n  const visibleContacts = getVisibleContacts();\n  const totalContacts = contacts.length;\n\n\n\n  return (\n    <Container>\n      <BalanceForm />\n\n      <h2>Contacts</h2>\n      <p>Total: {totalContacts}</p>\n\n      {isLoading && <Loader />}\n\n      {contacts.length > 0 && (\n        <>\n          <Filter />\n\n          <ContactList\n            visibleContacts={visibleContacts}\n          />\n\n          {/* <DeleteAllContacts /> */}\n        </>\n      )}\n\n      {contacts.length > 0 && !isLoading && <DeleteAllContacts />}\n\n    </Container>\n  );\n}\n\n// {contacts.length > 0 && !isLoading && (","// export const selectLoading = state => state.contacts.loading; //! Ошибка Репеты\nexport const selectLoading = state => state.contacts.isLoading;\n\n\n// export const selectFilter = state => state.contacts.filter; //! перенесен в отдельный reducer\n\nexport const selectAllContacts = state => state.contacts.items;\n\nexport const getUploadContacts = state => state.contacts.uploadContacts;","export const getFilter = state => state.filter; "],"names":["ContactEditor","id","name","phone","toggleModal","dispatch","useDispatch","isLoading","useSelector","selectLoading","className","css","onSubmit","e","preventDefault","form","currentTarget","editContact","elements","value","reset","type","pattern","title","required","defaultValue","disabled","Spinner","size","modalRoot","document","querySelector","Modal","children","onClose","useEffect","handleKeyDown","event","code","window","addEventListener","removeEventListener","createPortal","onClick","target","ContactListItem","useState","showModal","setShowModal","deleteContact","ContactList","visibleContacts","map","_id","Container","DeleteAllContacts","contacts","selectAllContacts","Filter","filter","getFilter","onChange","filterValue","changesFilter","Loader","style","margin","width","spin","keyframes","CgSpinner","defaultProps","BalanceForm","balance","useAuth","user","console","log","isRefreshing","selectIsRefreshing","changeBalance","toast","autoClose","theme","ExpensesPage","fetchContacts","getBalance","normalizedFilter","toLowerCase","contact","includes","getVisibleContacts","totalContacts","length","C","state","items","getUploadContacts","uploadContacts"],"sourceRoot":""}